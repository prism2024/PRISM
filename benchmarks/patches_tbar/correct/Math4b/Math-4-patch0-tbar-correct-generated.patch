--- Math4b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	2023-09-19 13:57:58.099167826 +0900
+++ Math4b-Math-4-patch0-tbar/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	2023-09-19 13:57:58.139168700 +0900
@@ -113,6 +113,9 @@
         Vector3D v1D = line.intersection(subLine.line);
 
         // check location of point with respect to first sub-line
+if (v1D == null) {
+	    return null;
+	}
         Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));
 
         // check location of point with respect to second sub-line
--- Math4b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	2023-09-19 13:57:58.099167826 +0900
+++ Math4b-Math-4-patch0-tbar/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	2023-09-19 13:57:58.143168788 +0900
@@ -117,6 +117,9 @@
         Vector2D v2D = line1.intersection(line2);
 
         // check location of point with respect to first sub-line
+if (v2D == null) {
+	    return null;
+	}
         Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));
 
         // check location of point with respect to second sub-line
